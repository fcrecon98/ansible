- name: change owner
  file: state=directory path={{dst_dir}}/{{product_linkname}}-{{product_ver}} owner=postgres group=postgres recurse=yes
  tags:
    - postgres

- name: check install pgmodules for DB server
  stat: path={{dst_dir}}/{{product_linkname}}-{{product_ver}}/lib/pgstattuple.so
  register: is_file_pgstattuple
  when: 
    - product_ver != '8.2.5'
  tags:
    - postgres

- name: make  pg_modules for DB server
  command: make chdir={{src_dir}}/{{product_name}}-{{product_ver}}/contrib/{{ item }}
  when: is_file_pgstattuple.stat.md5 is not defined
  with_items:
    - pg_buffercache
    - pg_stat_statements
    - pgstattuple
    - pg_xlogdump
    - dblink
    - pageinspect
    - pg_archivecleanup
  tags:
    - postgres

- name: make install pgmodules for DB server
  command: make install chdir={{src_dir}}/{{product_name}}-{{product_ver}}/contrib/{{ item }}
  when: is_file_pgstattuple.stat.md5 is not defined
  with_items:
    - pg_buffercache
    - pg_stat_statements
    - pgstattuple
    - pg_xlogdump
    - dblink
    - pageinspect
    - pg_archivecleanup
  tags:
    - postgres

- name: make postgres directory for DB server
  file: owner=postgres group=postgres state=directory path={{ item.path }} mode={{ item.mode }}
  with_items:
    - { mode: 744, path: /var/log/postgres }
    - { mode: 744, path: /var/pgsql }
    - { mode: 700, path: /var/pgsql/data }
    - { mode: 744, path: /var/pgsql/archive }
  tags:
    - postgres

- name: check initdb
  stat: path=/var/pgsql/data/base
  register: is_dir_base
  tags:
    - postgres

- name: initdb
  shell: /usr/local/postgres/bin/initdb -D /var/pgsql/data -E UTF8 --locale=ja_JP.utf8
  become: yes
  become_user: postgres
  when: is_dir_base.stat.isdir is not defined
  tags:
    - postgres

- name: copy init script
  shell: creates=/etc/init.d/postgres cp /usr/local/src/{{product_name}}-{{product_ver}}/contrib/start-scripts/linux /etc/init.d/postgres
  tags:
    - postgres

- name: edit init script
  lineinfile: backup=yes dest=/etc/init.d/{{product_linkname}} regexp="{{item.regexp}}" line="{{item.line}}"
  with_items:
    - { regexp: '^prefix=', line: 'prefix=/usr/local/"{{product_linkname}}"' }
    - { regexp: '^PGDATA=', line: 'PGDATA=/var/pgsql/data' }
  tags:
    - postgres

- name: edit postgres .bash_profile for pgdata
  action: lineinfile backup=yes dest=/home/postgres/.bash_profile regexp="{{item.regexp}}" line="{{item.line}}"
  with_items:
    - { regexp: '^# pgdata', line: '# pgdata' }
    - { regexp: '^PGDATA=', line: 'PGDATA=/var/pgsql/data' }
    - { regexp: '^export PGDATA', line: 'export PGDATA' }
  when:
    - product_ver != '8.2.5'
  tags:
    - postgres

- name: add exec mode
  file: state=file mode=755 path=/etc/init.d/{{product_linkname}}
  tags:
    - postgres

- name: add postgres service
  shell: chkconfig --add postgres
  tags:
    - postgres

- name: diable postgres service
  service: name=postgres enabled=no
  tags:
    - postgres

- name: start postgres service
  #service: name=postgres state=started enabled=no
  shell: service postgres start
  tags:
    - postgres

