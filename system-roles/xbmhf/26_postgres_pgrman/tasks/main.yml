- name : check exist sorce file
  command : ls {{src_dir}}/pg_rman-{{pg_rman_ver}}.tar.gz
  ignore_errors: True
  register: result1

- name: copy source file
  copy : src=pg_rman-{{pg_rman_ver}}.tar.gz dest={{src_dir}}
  when: result1|failed

- name : check exist sorce file
  command : ls {{src_dir}}/pg_rman-{{pg_rman_ver}}
  ignore_errors: True
  register: result2

- name : tar
  command : tar xvfz pg_rman-{{pg_rman_ver}}.tar.gz chdir={{src_dir}} creates={{src_dir}}/pg_rman-{{pg_rman_ver}}
  when: result2|failed

- name: install packages in pre libraries
  action: yum pkg={{ item }} state=latest
  with_items:
    - pam-devel
    - readline-devel
    - zlib-devel
  tags:
    - packages

- name: check install
  command: ls {{dst_dir}}/{{product_linkname}}-{{product_ver}}/bin/pg_rman
  ignore_errors: True
  register: result3

- name : make
  shell: bash -lc "make" chdir={{src_dir}}/pg_rman-{{pg_rman_ver}}
  become: yes
  become_user: postgres
  when: result3|failed

- name : make install
  shell: bash -lc "make install" chdir={{src_dir}}/pg_rman-{{pg_rman_ver}}
  become: yes
  become_user: postgres
  when: result3|failed

- name : make backup dir
  file : path=/var/pgsql/pg_rman state=directory mode=744 owner=postgres group=postgres

- name: edit postgres .bash_profile for pg_rman
  action: lineinfile backup=yes dest=/home/postgres/.bash_profile regexp="{{item.regexp}}" line="{{item.line}}"
  with_items:
    - { regexp: '^# pg_rman', line: '# pg_rman' }
    - { regexp: '^BACKUP_PATH=', line: 'BACKUP_PATH=/var/pgsql/pg_rman' }
    - { regexp: '^export BACKUP_PATH', line: 'export BACKUP_PATH' }
    - { regexp: '^ARCLOG_PATH=', line: 'ARCLOG_PATH=/var/pgsql/archive' }
    - { regexp: '^export ARCLOG_PATH', line: 'export ARCLOG_PATH' }
  when: 
    - product_ver != '8.2.5'
  tags:
    - postgres

- name : check exist pg_rman.ini file
  command : ls /var/pgsql/pg_rman/pg_rman.ini
  ignore_errors: True
  register: result4

- name : pg_rman init
  shell: bash -lc "pg_rman init" chdir={{src_dir}}/pg_rman-{{pg_rman_ver}}
  become: yes
  become_user: postgres
  when: result3|failed
  
- name: copy pg_rman.ini file
  copy : src=pg_rman.ini dest=/var/pgsql/pg_rman/ owner=postgres group=postgres
  when: result4|failed


