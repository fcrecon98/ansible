# install required package
- name: install required packages from repository
  action: yum name={{ item }} state=latest
  with_items:
    - openssl
    - openssl-devel
  tags:
    - tomcat

# install tomcat
- name: download tomcat source file
  action: shell http_proxy={{ http_proxy }} wget -nc http://archive.apache.org/dist/tomcat/tomcat-7/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz chdir=/usr/local/src/
  tags:
    - tomcat

- name: extract tomcat source file
  action: shell tar xvzf {{ item }} chdir=/usr/local/src/
  with_items:
    - apache-tomcat-{{ tomcat_version }}.tar.gz
  tags:
    - tomcat

- name: move tomcat directory under /usr/local/
  action: shell test -e src/apache-tomcat-{{tomcat_version }} && mv src/apache-tomcat-{{tomcat_version}} . chdir=/usr/local/
  ignore_errors:
  tags:
    - tomcat

- name: create symlink for tomcat home directory
  action: file state=link src=/usr/local/apache-tomcat-{{ tomcat_version }} dest=/usr/local/tomcat
  tags:
     - tomcat

- name: create tocmat log directories
  action: file state=directory path={{ item }}
  with_items:
    - /var/log/tomcat/
  tags:
    - tomcat

- name: create symlink for tomcat log directory (1/2)
  action: file state=absent force=yes path=/usr/local/tomcat/logs/
  ignore_errors:
  tags:
    - tomcat

- name: create symlink for tomcat log directory (2/2)
  action: file state=link src=/var/log/tomcat dest=/usr/local/tomcat/logs
  ignore_errors:
  tags:
    - tomcat

- name: hide product name 
  action: lineinfile line='               server="appserver"' insertafter='    <Connector port="8080" protocol="HTTP/1.1"' dest=/usr/local/tomcat/conf/server.xml backup=yes
  tags:
    - tomcat

- name: backup catalina.jar
  action: shell cp -p /usr/local/tomcat/lib/catalina.jar /usr/local/tomcat/lib/catalina.jar.org
  tags:
    - tomcat

- name: hide product version(1/3) extract ServerInfo.properties from catalina.jar
  action: shell jar xf catalina.jar org/apache/catalina/util/ServerInfo.properties chdir=/usr/local/tomcat/lib/
  tags:
    - tomcat

- name: hide product version(2/3) edit ServerInfo.properties
  action: replace regexp='=.*' replace='=' dest=/usr/local/tomcat/lib/org/apache/catalina/util/ServerInfo.properties backup=yes
  tags:
    - tomcat

- name: hide product version(3/3) import ServerInfo.properties to catalina.jar
  action: shell jar uf catalina.jar org/apache/catalina/util/ServerInfo.properties chdir=/usr/local/tomcat/lib/
  tags:
    - tomcat

# install tomcat native
- name: download tomcat native source file
  action: shell http_proxy={{ http_proxy }} wget -nc http://archive.apache.org/dist/tomcat/tomcat-connectors/native/{{ tomcat_native_version }}/source/tomcat-native-{{ tomcat_native_version }}-src.tar.gz chdir=/usr/local/src/
  tags:
    - tomcat

- name: extract tomcat native source file
  action: shell tar xvzf {{ item }} chdir=/usr/local/src/
  with_items:
    - tomcat-native-{{ tomcat_native_version }}-src.tar.gz
  tags:
    - tomcat

- name: copy tomcat native configure script
  action: template src=tomcat-native-configure.sh dest=/usr/local/src/tomcat-native-{{ tomcat_native_version }}-src/jni/native/ mode=0755
  tags:
    - tomcat

- name: exec tomcat native configure script
  action: shell sh tomcat-native-configure.sh chdir=/usr/local/src/tomcat-native-{{ tomcat_native_version }}-src/jni/native/
  tags:
    - tomcat

- name: make & make install tomcat native
  action: shell make && make install chdir=/usr/local/src/tomcat-native-{{ tomcat_native_version }}-src/jni/native/
  tags:
    - tomcat

# install jsvc binary
- name: copy /usr/local/tomcat/bin/commons-daemon-native.tar.gz to /usr/local/src/
  action: shell cp -pf tomcat/bin/commons-daemon-native.tar.gz src/ chdir=/usr/local/
  tags:
     - tomcat

- name: extract /usr/local/src/commons-daemon-native.tar.gz 
  action: shell tar xvzf commons-daemon-native.tar.gz chdir=/usr/local/src/
  tags:
     - tomcat

- name: get extracted directory from commons-daemon-native.tar.gz
  action: shell ls -d commons-daemon-*src | sort | tail -1 chdir=/usr/local/src/
  register: commons_daemon_dir
  tags:
     - tomcat

- name: exec configure script of commons-daemon-native
  action: shell ./configure --with-java=/usr/java/default/ chdir=/usr/local/src/{{ commons_daemon_dir.stdout }}/unix/
  tags:
     - tomcat

- name: make jsvc module 
  action: shell make EXTRA_CFLAGS="-DJSVC_UMASK=022" chdir=/usr/local/src/{{ commons_daemon_dir.stdout }}/unix/
  tags:
     - tomcat

- name: install jsvc module
  action: shell install -m 755 jsvc /usr/local/tomcat/bin/ chdir=/usr/local/src/{{ commons_daemon_dir.stdout }}/unix/
  tags:
     - tomcat

- name: copy tomcat init script
  action: template src=etc_init.d_tomcat dest=/etc/init.d/tomcat mode=0755
  tags:
     - tomcat

- name: copy /etc/sysconfig/tomcat 
  action: template src=etc_sysconfig_tomcat dest=/etc/sysconfig/tomcat
  tags:
     - tomcat

- name: download jolokia
  action: shell http_proxy={{ http_proxy }} wget http://labs.consol.de/maven/repository/org/jolokia/jolokia-jvm/{{ jolokia_version | default("1.2.3") }}/jolokia-jvm-{{ jolokia_version | default("1.2.3") }}-agent.jar chdir=/usr/local/tomcat/lib/
  tags:
    - tomcat

- name: create symlink jolokia
  action: file state=link src=/usr/local/tomcat/lib/jolokia-jvm-{{ jolokia_version | default("1.2.3") }}-agent.jar dest=/usr/local/tomcat/lib/jolokia-jvm-agent.jar force=yes
  tags:
    - tomcat

- name: add tomcat service
  action: shell chkconfig --add tomcat
  tags:
     - tomcat

- name: start tomcat
  action: service name=tomcat state=restarted enabled=yes
  tags:
     - tomcat

- name: add logrotate conf
  action: template src=etc_logrotate.d_tomcat dest=/etc/logrotate.d/tomcat
  tags:
     - tomcat


