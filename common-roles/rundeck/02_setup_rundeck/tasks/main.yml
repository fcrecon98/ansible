- name: create rundeck database
  action: mysql_db name=rundeck state=present
  tags:
    - rundeck

- name: create rundeck user
  action: mysql_user name=rundeck password=rundeck priv=rundeck.*:ALL host=127.0.0.1 state=present
  tags:
    - rundeck

- name: install mysql java connector
  action: yum name=mysql-connector-java enablerepo=epel disable_gpg_check=yes
  tags:
    - rundeck

- name: copy ldap config file
  action: template src=jaas-ldap.conf dest=/etc/rundeck/
  tags:
    - rundeck

- name: change login module to ldap
  action: replace regexp="{{ item.regexp }}" replace="{{ item.replace }}" dest=/etc/rundeck/profile
  with_items:
    - { regexp: 'jaas-loginmodule.conf', replace: 'jaas-ldap.conf' }
    - { regexp: 'RDpropertyfilelogin', replace: 'ldap' }
  tags:
    - rundeck

- name: create local admin user
  action: lineinfile line="admin:rundeck,admin" dest=/etc/rundeck/realm.properties
  tags:
    - rundeck

- name: change database embedded to mysql
  action: lineinfile dest=/etc/rundeck/rundeck-config.properties regexp="{{ item.regexp }}" line="{{ item.line }}" insertafter="{{ item.insertafter }}" backup="{{ item.backup }}"
  with_items:
    - { regexp: 'dataSource.url', line: 'dataSource.url = jdbc:mysql://127.0.0.1/rundeck?autoReconnect=true
', insertafter: 'dataSource.dbCreate', backup: 'yes'}
    - { regexp: 'dataSource.username', line: 'dataSource.username = rundeck', insertafter: 'dataSource.url', backup: 'no' }
    - { regexp: 'dataSource.password', line: 'dataSource.password = rundeck', insertafter: 'dataSource.username', backup: 'no' }
  tags:
    - rundeck

- name: add mail properties
  action: lineinfile dest=/etc/rundeck/rundeck-config.properties regexp="{{ item.regexp }}" line="{{ item.line }}" backup="{{ item.backup }}"
  with_items:
    - { regexp: 'grails.mail.host', line: 'grails.mail.host = {{ mailserver }}', backup: 'yes' }
    - { regexp: 'grails.mail.port', line: 'grails.mail.port = 25', backup: 'no' }
    - { regexp: 'grails.mail.default.from', line: 'grails.mail.default.from = {{ ansible_hostname }}@{{ maildomain }}', backup: 'no' }
  tags:
    - rundeck

- name: setup acl policy
  action: template src=admin.aclpolicy dest=/etc/rundeck/ backup=yes
  tags:
    - rundeck

- name: setup api aclpolicy
  action: template src=apitoken.aclpolicy dest=/etc/rundeck/ backup=yes
  tags:
    - rundeck

- name: delete default security settings from web.xml 1/2
  action: lineinfile dest=/var/lib/rundeck/exp/webapp/WEB-INF/web.xml regexp="{{ item }}" state=absent backup=yes
  with_items:
    - <security-role>
    - <role-name>user</role-name>
  tags:
    - rundeck

- name: delete default security settings from web.xml 2/2
  action: lineinfile dest=/var/lib/rundeck/exp/webapp/WEB-INF/web.xml regexp="</security-role>" line="<!-- security-roles -->"
  tags:
    - rundeck

- name: add security settings to web.xml
  action: lineinfile dest=/var/lib/rundeck/exp/webapp/WEB-INF/web.xml line="{{ item }" insertafter="<!-- security-roles -->"
  with_items
    - "        <security-role><role-name>admin</role-name></security-role>"
    - "        <security-role><role-name>{{ system }}</role-name></security-role>"
    - "        <security-role><role-name>{{ system }}_ope</role-name></security-role>"
    - "        <security-role><role-name>{{ system }}_dev</role-name></security-role>"
  tags:
    - rundeck
    
- name: create work dir
  action: file state=dir path={ item }
  with_items:
    - /opt/capcom
    - /opt/capcom/rundeck
    - /opt/capcom/rundeck/bin
    - /opt/capcom/rundeck/work
  tags:
    - rundeck

- name: put backup shell script
  action: copy src={{ item }} mode=0755 owner=rundeck group=rundeck dest=/opt/capcom/rundeck/bin/
  with_items:
    - deleteoldexecution.sh
    - exportproject.sh
  tags:
    - rundeck

- name: restart rundeckd
  action: service name=rundeckd state=restarted
  tags:
    - rundeck
